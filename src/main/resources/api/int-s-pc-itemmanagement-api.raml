#%RAML 1.0
title: int-s-pc-itemmanagement-api

description: This API is the Items system layer that will connect to a database and will be used to make create, update and delete items. The item status retrieve request will be sent to the Integration DB
version: v1
protocols: [HTTPS]
mediaType: application/xml
documentation:
  - !include docs/api_doc.raml

securitySchemes:
  clientIdAuth: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-api-security/1.0.0/securityFragments/clientIdEnforcement/clientID-enforced-headers.raml
  
securedBy: [clientIdAuth]

uses: 
  resourceMethods: exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-resource-types/1.0.1/common-resource-types.raml
  localDataTypes: libraries/localDataTypesLibrary.raml

traits: 
  clientCode: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-api-traits/1.0.1/definitions/wms-clientCode.raml
  traceable: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-api-traits/1.0.1/definitions/traceable.raml
  hasErrorResponse: !include /exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/global_error_response.raml

# HTTP Success codes
  success_list_paged_200: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/success_list_paged_200.raml
  success_list_200: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/success_list_200.raml
  success_200: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/success_200.raml
  success_200_xml: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/success_200_xml.raml
  success_201: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/success_201.raml
  success_201_xml: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/success_201_xml.raml
  success_202: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/success_202.raml      
  success_202_xml: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/success_202_xml.raml 
  nullvalue_204: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/nullvalue_204.raml
  success_206: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-response-messages/1.0.2/definitions/success_206.raml

# HTTP Error codes
  err_400: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_400.raml
  err_401: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_401.raml
  err_403: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_403.raml
  err_404: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_404.raml
  err_405: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_405.raml
  err_406: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_406.raml
  err_407: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_407.raml
  err_415: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_415.raml
  err_500: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_500.raml
  err_501: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_501.raml
  err_503: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_503.raml
  err_504: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_504.raml       
  err_509: !include exchange_modules/5118d337-6eb3-457f-b419-0f576de4c259/common-fault-messages/1.0.0/traits/err_509.raml 



  
#######################################################################################################
                                    #DO NOT EDIT ABOVE THIS LINE#
#######################################################################################################
  

# This resource provides the life status of the API.
/healthCheck:
  get:
    description: This resource provides the life status of the API
    is: [hasErrorResponse]
    responses:
      200:
        body:
          application/json:
            example: !include examples/responses/api_status_response.json


/item:
  type:
    resourceMethods.collection_types_xml:
    #POST method to create an item 
      postDescription: Create an new item in database
      postRequestType: localDataTypes.genericItemSchema
      postRequestExample: !include examples/generic_item_example.xml
      postResponseType: null
      postResponseExample_201: !include examples/responses/success_201.json
      postResponseExample_202: !include examples/responses/success_202.json
  post:
    is: [traceable, clientCode]


  /{itemCode}:
    type: 
      resourceMethods.collection_types_xml: 
      #PUT method to update an item
        putDescription: Update an item in database
        putRequestType: localDataTypes.genericItemSchema
        putRequestExample: !include examples/generic_item_example.xml
        putResponseType: null
        putResponseExample: !include examples/responses/success_202_update.json
        putResponseExample_202: !include examples/responses/success_202_update.json

      #DELETE method to delete an item
        deleteDescription: Delete an item in database
        deleteRequestType: localDataTypes.genericItemSchema
        deleteRequestExample: !include examples/generic_item_example.xml
        deleteResponseType: null
        deleteResponseExample: !include examples/responses/success_202_delete.json
        deleteResponseExample_202: !include examples/responses/success_202_delete.json
        
    put:
      is: [traceable, clientCode]

    delete:
      is: [traceable, clientCode]
 

    /status:
      type: 
        #GET method to retrieve status of an item
        resourceMethods.collection_types_xml: 
          getDescription: Retrieve an item based on the itemCode
          getResponseType: localDataTypes.itemStatusResponse
          getResponseExample: !include examples/responses/item_status_response.xml
      get:
        is: [traceable, clientCode]